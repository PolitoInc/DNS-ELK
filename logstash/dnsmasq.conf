input {
    # Listen for logs from Filebeat on default port
    beats {
        port => 5044
        type => "logs"
    }
}

filter {
    if "pihole" in [tags] {
        # These grok patterns will match on 3 types of the dnsmaq logs and use custom patterns
        grok {
            patterns_dir => ["./patterns"]
            match=> { "message" => [
            "%{logdate:LOGDATE} dnsmasq\[(?<dnsmasq>\d+)\]: (?<type>reply|cached|query|query\[AAA\]|forwarded|query\[A\]|query\[AAAA\]|query\[HTTPS\]|query\[PTR\]|gravity blocked) %{domain:domain_request} (?<direction>is|from|to) %{IP:ip_response}",
            "%{logdate:LOGDATE} dnsmasq\[(?<dnsmasq>\d+)\]: (?<type>reply|cached|query|query\[AAA\]|forwarded|query\[A\]|query\[AAAA\]|query\[HTTPS\]|query\[PTR\]|gravity blocked) %{domain:domain_request} (?<direction>is|from|to) %{IPV6:ip_response}",
            "%{logdate:LOGDATE} dnsmasq\[(?<dnsmasq>\d+)\]: (?<type>reply|cached|query|query\[AAA\]|forwarded|query\[A\]|query\[AAAA\]|query\[HTTPS\]|query\[PTR\]) %{domain:domain_request} (?<direction>is|from|to) (?<ip_response>NODATA-IPv6|\<CNAME\>|NODATA|NXDOMAIN)"]
            }
        }

        if [message] =~ "cached" and [message] =~ "NXDOMAIN" {
          mutate {
            add_tag => [ "cached NXDOMAIN" ]
          }
        }

        # to do cached and cached reverse
        else if [message] =~ "NODATA" {
          mutate {
            add_tag => [ "NODATA" ]
          }
        }
        else if "reply" in [type] {
          mutate {
            add_tag => [ "reply" ]
          }
        }

        # Enrich logs with GeoIP geolocation data
        geoip {
            source => "ip_response"
            target => "ip_response_geo"
        }

        # Standardize the @timestamp so it matches LOGDATE
        date {
            match => [ "LOGDATE", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
        }
    }
}

output {
    # Ship the logs to Elasticsearch and output to screen
    elasticsearch {
        # Specify your Elasticsearch IP
        hosts => ["localhost:9200"]
        user => "elastic"
        password => "${ES_PWD}"
        ssl_enabled => true
        ssl_certificate_authorities => "/etc/logstash/certs/elasticsearch-ca.pem"
        index => "logstash-dnsmasq-%{+YYYY.MM.dd}"
    }
    stdout {
        codec => rubydebug
    }
}
